// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© amarendra-singh

//@version=5
indicator(title = "basic")
cus = open + close + high + low 

var label _label = na 
var label [] LABELARRAY =  array.new_label() 

if bar_index
    array.push(LABELARRAY, label.new(bar_index, high, text = str.tostring(close)))
    if array.size(LABELARRAY) > 1
        label.delete(array.shift(LABELARRAY))


BarisUp() =>
    close > open
plotcolor = if BarisUp()
    color.blue
else 
    color.red
sma = ta.sma(cus,24)

isBlackA = high < high [1] and low < low[1] and close < close[1] and close < open[1]
isBlackB = high[1] < high [2] and low[1] < low[2] and close[1] < close [2] and close[1] < open[2]
isBlackC = high[2] < high [3] and low [2] < low [3] and close [2] < close [3] and close[2] < open[3]
BlackCrow = isBlackA and isBlackB and isBlackC
barcolor(BlackCrow ? color.rgb(255, 238, 0) : na)
// bgcolor(color.new(plotcolor,90))

varip int updateNo = na
if barstate.isnew
    updateNo := 1
else
    updateNo := updateNo + 1

//v=4
// highestHigh = highest(high,50)
// lowestLow = lowest(low,50)

// plot(highestHigh)
// plot(lowestLow)

//AvgOpenPositionPrice
AvgOpenPositionPrice()=>
    result = 0.
    for i = 0 to strategy.opentrades - 1
        entry_price = strategy.opentrades.entry_price(i)
        size = strategy.opentrades.size(i)
        result += entry_price * size / strategy.position_size
    strategy.opentrades > 0 ? result / strategy.opentrades: na

plot(updateNo, style = plot.style_circles) 